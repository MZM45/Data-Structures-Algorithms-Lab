Consider following array that represents the height of 13 students (e.g. 5.3 represents 5feet and 3 inches). Write a program that arrange the height from shortest to tallest using merge sort.

5.6	6.0	5.11	5.9	5.8	5.7	6.1	5.5	5.4	5.3	6.2	5.2	5.0
Code: #include <iostream>
#include <vector>

using namespace std;

void merge(vector<double> &arr, int left, int middle, int right) {
    int n1 = middle - left + 1;
    int n2 = right - middle;

    vector<double> leftArr(n1);
    vector<double> rightArr(n2);

    for (int i = 0; i < n1; i++) {
        leftArr[i] = arr[left + i];
    }
    for (int j = 0; j < n2; j++) {
        rightArr[j] = arr[middle + 1 + j];
    }

    int i = 0, j = 0, k = left;

    while (i < n1 && j < n2) {
        if (leftArr[i] <= rightArr[j]) {
            arr[k] = leftArr[i];
            i++;
        } else {
            arr[k] = rightArr[j];
            j++;
        }
        k++;
    }

    while (i < n1) {
        arr[k] = leftArr[i];
        i++;
        k++;
    }

    while (j < n2) {
        arr[k] = rightArr[j];
        j++;
        k++;
    }
}

void mergeSort(vector<double> &arr, int left, int right) {
    if (left < right) {
        int middle = left + (right - left) / 2;
        mergeSort(arr, left, middle);
        mergeSort(arr, middle + 1, right);
        merge(arr, left, middle, right);
    }
}

int main() {
    vector<double> heights;
    heights.push_back(5.6);
    heights.push_back(6.0);
    heights.push_back(5.11);
    heights.push_back(5.9);
    heights.push_back(5.8);
    heights.push_back(5.7);
    heights.push_back(6.1);
    heights.push_back(5.5);
    heights.push_back(5.4);
    heights.push_back(5.3);
    heights.push_back(6.2);
    heights.push_back(5.2);
    heights.push_back(5.0);

    int size = heights.size();

    cout << "Original Heights: ";
    for (int i = 0; i < size; i++) {
        cout << heights[i] << " ";
    }
    cout << endl;

    mergeSort(heights, 0, size - 1);

    cout << "Sorted Heights (Shortest to Tallest): ";
    for (int i = 0; i < size; i++) {
        cout << heights[i] << " ";
    }
    cout << endl;

    return 0;
}
