Exercise 2
Consider the following array. Write a program to determine the time taken to search following elements using linear search and binary 
Item=44
Item=400
Item=450
{2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,169,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,23238,240,242,244,246,248,250,252,254,256,258,260,262,264,266,268,270,272,274,276,278,280,282,284,286,288,300,302,304,306,308,310,312,314,316,318,320,322,324,326,328,330,332,334,336,338,340,342,344,346,348,350,352,354,356,358,360,362,364,366,368,370,372,374,376,378,380,382,384,386,388,390,392,394,396,398,400}
Code:
#include <iostream>

using namespace std;

int linearSearch(int arr[], int size, int item, int& iterations) {
    for (int i = 0; i < size; ++i) {
        iterations++; // Increment the iteration count
        if (arr[i] == item) {
            return i;
        }
    }
    return -1; // Item not found
}

int binarySearch(int arr[], int left, int right, int item, int& iterations) {
    while (left <= right) {
        iterations++; 
        int mid = left + (right - left) / 2;

        if (arr[mid] == item) {
            return mid;
        }
        if (arr[mid] < item) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return -1; // Item not found
}

int main() {
    int arr[] = {2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,169,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,23238,240,242,244,246,248,250,252,254,256,258,260,262,264,266,268,270,272,274,276,278,280,282,284,286,288,300,302,304,306,308,310,312,314,316,318,320,322,324,326,328,330,332,334,336,338,340,342,344,346,348,350,352,354,356,358,360,362,364,366,368,370,372,374,376,378,380,382,384,386,388,390,392,394,396,398,400};
    
    int size = sizeof(arr) / sizeof(arr[0]);

    int itemsToSearch[] = {44, 400, 450};
    int numItems = sizeof(itemsToSearch) / sizeof(itemsToSearch[0]);

    for (int i = 0; i < numItems; ++i) {
        int item = itemsToSearch[i];

        int linearIterations = 0;
        int linearResult = linearSearch(arr, size, item, linearIterations);
        if (linearResult != -1) {
            cout << "Linear Search: Item " << item << " found at index " << linearResult << " after " << linearIterations << " iterations." << endl;
        } else {
            cout << "Linear Search: Item " << item << " not found after " << linearIterations << " iterations." << endl;
        }

        int binaryIterations = 0; 
        int binaryResult = binarySearch(arr, 0, size - 1, item, binaryIterations);
        if (binaryResult != -1) {
            cout << "Binary Search: Item " << item << " found at index " << binaryResult << " after " << binaryIterations << " iterations." << endl;
        } else {
            cout << "Binary Search: Item " << item << " not found after " << binaryIterations << " iterations." << endl;
        }

        cout << endl;
    }

    return 0;
}
