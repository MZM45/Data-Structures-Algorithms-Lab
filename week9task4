Consider the following array that stores the age of the different people
50	35	60	44	70	55	65	22	18	46	36	33	53	42
31	45	72	54	25	41	66	52	42	32	49	39	59	23

Write a program that sort the people from youngest to oldest using quick sort and merge sort.
Code: #include <iostream>
using namespace std;
void swap(int &a, int &b) {
    int temp = a;
    a = b;
    b = temp;
}

int partition(int arr[], int low, int high) {
    int pivot = arr[high];
    int i = low - 1;

    for (int j = low; j <= high - 1; j++) {
        if (arr[j] < pivot) {
            i++;
            swap(arr[i], arr[j]);
        }
    }

    swap(arr[i + 1], arr[high]);
    return i + 1;
}

void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);

        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

void merge(int arr[], int l, int m, int r) {
    int n1 = m - l + 1;
    int n2 = r - m;

    int L[n1], R[n2];

    for (int i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (int j = 0; j < n2; j++)
        R[j] = arr[m + 1 + j];

    int i = 0, j = 0, k = l;
    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) {
            arr[k] = L[i];
            i++;
        } else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }

    while (i < n1) {
        arr[k] = L[i];
        i++;
        k++;
    }

    while (j < n2) {
        arr[k] = R[j];
        j++;
        k++;
    }
}

void mergeSort(int arr[], int l, int r) {
    if (l < r) {
        int m = l + (r - l) / 2;

        mergeSort(arr, l, m);
        mergeSort(arr, m + 1, r);

        merge(arr, l, m, r);
    }
}

int main() {
    const int size = 28;
    int ages[size] = {50, 35, 60, 44, 70, 55, 65, 22, 18, 46, 36, 33, 53, 42,
                     31, 45, 72, 54, 25, 41, 66, 52, 42, 32, 49, 39, 59, 23};


    quickSort(ages, 0, size - 1);
    cout << " Quick Sort youngest to oldest:\n";
    for (int i = 0; i < size; i++) {
        cout << ages[i] << " ";
    }
    cout << "\n";
    mergeSort(ages, 0, size - 1);
    cout << "Merge Sort youngest to oldest:\n";
    for (int i = 0; i < size; i++) {
        cout << ages[i] << " ";
    }
    cout << "\n";

    return 0;
}
