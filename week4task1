Write a program to determine the time taken to sort a given set of elements
•	Bubble sort 
•	Insertion sort
•	Selection sort

{100,45,77,88,99,12,47,55,90,87,66,43,22,11,33,23,15,99,74,15,13,69,89,4,8,78,43,55,78,66,99,200,40,30,50,70,39,19,34,55,35,77,64,53,29,69,95,59,150}
Code:
#include <iostream>

using namespace std;

void bubbleSort(int arr[], int n, int& bubbleIterations) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            bubbleIterations++; 
            if (arr[j] > arr[j + 1]) {
                swap(arr[j], arr[j + 1]);
            }
        }
    }
}

void insertionSort(int arr[], int n, int& insertionIterations) {
    for (int i = 1; i < n; i++) {
        int key = arr[i];
        int j = i - 1;
        while (j >= 0 && arr[j] > key) {
            insertionIterations++; 
            arr[j + 1] = arr[j];
            j--;
        }
        arr[j + 1] = key;
    }
}

void selectionSort(int arr[], int n, int& selectionIterations) {
    for (int i = 0; i < n - 1; i++) {
        int minIndex = i;
        for (int j = i + 1; j < n; j++) {
            selectionIterations++; 
            if (arr[j] < arr[minIndex]) {
                minIndex = j;
            }
        }
        swap(arr[i], arr[minIndex]);
    }
}

int main() {
    int arr[] = {100, 45, 77, 88, 99, 12, 47, 55, 90, 87, 66, 43, 22, 11, 33, 23, 15, 99, 74, 15, 13, 69, 89, 4, 8, 78, 43, 55, 78, 66, 99, 200, 40, 30, 50, 70, 39, 19, 34, 55, 35, 77, 64, 53, 29, 69, 95, 59, 150};
    int n = sizeof(arr) / sizeof(arr[0]);

    int bubbleSorted[n];
    int insertionSorted[n];
    int selectionSorted[n];

    for (int i = 0; i < n; i++) {
        bubbleSorted[i] = arr[i];
        insertionSorted[i] = arr[i];
        selectionSorted[i] = arr[i];
    }

    int bubbleIterations = 0;
    int insertionIterations = 0;
    int selectionIterations = 0;

    bubbleSort(bubbleSorted, n, bubbleIterations);

    insertionSort(insertionSorted, n, insertionIterations);

    selectionSort(selectionSorted, n, selectionIterations);

    cout << "Bubble Sort Iterations: " << bubbleIterations << " iterations" << endl;
    cout << "Insertion Sort Iterations: " << insertionIterations << " iterations" << endl;
    cout << "Selection Sort Iterations: " << selectionIterations << " iterations" << endl;

    return 0;
}
