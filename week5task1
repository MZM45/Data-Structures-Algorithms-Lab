Write a program that implements the stack with Max_size=7.Program must have following functions
PUSH()
POP()
Display()
Test the program using the following procedure
a.	Call PUSH (5)
b.	Call PUSH (2)
c.	Call PUSH (3)
d.	Call PUSH (6)
e.	Call PUSH (9)
f.	Call PUSH (3)
g.	Call PUSH(7)
h.	Call PUSH(9)
i.	Display all elements.
j.	POP an element
k.	Display all elements

Code: #include <iostream>

const int max_size = 7;
int stack[max_size];
int top = -1;

bool isFull() {
    return top == max_size - 1;
}

bool isEmpty() {
    return top == -1;
}

void PUSH(int value) {
    if (isFull()) {
        std::cout << "Stack is full. Cannot push " << value << std::endl;
        return;
    }
    stack[++top] = value;
    std::cout << "Pushed " << value << " onto the stack." << std::endl;
}

void POP() {
    if (isEmpty()) {
        std::cout << "Stack is empty. Cannot pop." << std::endl;
        return;
    }
    std::cout << "Popped " << stack[top--] << " from the stack." << std::endl;
}

void Display() {
    if (isEmpty()) {
        std::cout << "Stack is empty." << std::endl;
        return;
    }

    std::cout << "Stack contents: ";
    for (int i = 0; i <= top; i++) {
        std::cout << stack[i] << " ";
    }
    std::cout << std::endl;
}

int main() {
    PUSH(5);
    PUSH(2);
    PUSH(3);
    PUSH(6);
    PUSH(9);
    PUSH(3);
    PUSH(7);
    PUSH(9);

    std::cout << "Elements in the stack: ";
    Display();

    POP();

    std::cout << "Elements in the stack after POP: ";
    Display();

    return 0;
}
